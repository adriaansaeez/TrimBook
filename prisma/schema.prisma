generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// âœ… Modelo de Usuario
model Usuario {
  id       Int       @id @default(autoincrement())
  username String    @unique
  email    String    @unique
  password String
  rol      Rol
  reservas Reserva[]

  Perfil Perfil?
}

// âœ… Modelo de Perfil (InformaciÃ³n adicional del usuario)
model Perfil {
  id            Int     @id @default(autoincrement())
  usuarioId     Int     @unique
  nombre        String?
  apellidos     String?
  telefono      String?
  direccion     String?
  fotoPerfil    String?
  instagram_url String?

  usuario Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
}

// âœ… Modelo de Estilista
model Estilista {
  id        Int        @id @default(autoincrement())
  nombre    String
  horarios  Horario[]
  reservas  Reserva[]

  servicios Servicio[] // Un estilista puede tener varios servicios
}

// âœ… Modelo de Servicio (Cada servicio pertenece a un solo estilista)
model Servicio {
  id          Int       @id @default(autoincrement())
  nombre      String
  descripcion String
  precio      Decimal
  duracion    Int

  estilistaId Int       
  estilista   Estilista @relation(fields: [estilistaId], references: [id], onDelete: Cascade)

  reservas    Reserva[] // RelaciÃ³n con las reservas
}

// âœ… Modelo de Reservas
model Reserva {
  id          Int           @id @default(autoincrement())
  usuarioId   Int
  estilistaId Int
  servicioId  Int
  fecha       DateTime
  estado      EstadoReserva @default(PENDIENTE)

  usuario   Usuario   @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  estilista Estilista @relation(fields: [estilistaId], references: [id], onDelete: Cascade)
  servicio  Servicio  @relation(fields: [servicioId], references: [id], onDelete: Cascade)
}

// âœ… Modelo de Horarios (DÃ­as y Horas de Trabajo)
model Horario {
  id          Int      @id @default(autoincrement())
  estilistaId Int
  dia         DiaSemana
  horaInicio  String
  horaFin     String

  estilista Estilista @relation(fields: [estilistaId], references: [id], onDelete: Cascade)
}


// ðŸŽ¨ Enums para definir roles y dÃ­as de la semana
enum Rol {
  ADMIN
  CLIENTE
  ESTILISTA
}

enum EstadoReserva {
  PENDIENTE
  CONFIRMADA
  CANCELADA
}

enum DiaSemana {
  LUNES
  MARTES
  MIERCOLES
  JUEVES
  VIERNES
  SABADO
  DOMINGO
}
